name: tidy, test, coverage
on: [push, pull_request]
jobs:
#  tidy:
#    runs-on: ubuntu-20.04
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          submodules: 'recursive'
#      - uses: ./.github/actions/install-deps
#      - run: mkdir build
#      - run: cmake -B build -DCMAKE_C_COMPILER=clang-13 -DCMAKE_CXX_COMPILER=clang++-13 -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -GNinja
#      - run: find src -name '*.cpp' | xargs clang-tidy-13 -p build
  test-with-cov:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: ./.github/actions/install-deps
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: ${{ matrix.os }}
          max-size: 3G
      - name: configure
        run: |
          mkdir build
          cmake -B build -DCMAKE_C_COMPILER=/usr/lib/ccache/clang-13 -DCMAKE_CXX_COMPILER=/usr/lib/ccache/clang++-13 -DSYSTEM_BOOST=FALSE -DSYSTEM_GRPC=FALSE -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCOVERAGE=TRUE -DLLVM_PROFDATA=llvm-profdata-13 -DLLVM_COV=llvm-cov-13 -GNinja
      - name: build
        run: ninja
        working-directory: ./build
      - name: test
        run: ninja test
        working-directory: ./build
      - name: coverage
        run: ninja coverage
        working-directory: ./build
      - name: codecov
        uses: codecov/codecov-action@v2
        with:
          files: build/coverage-lcov.txt
      - uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: |
            build/coverage.txt
            build/coverage.html
            build/coverage.json
